{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 08d45fabccece57849d9","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/angular2-now.js","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/common.js","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/set-module.js","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/component.js","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/view.js","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/inject.js","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/utils.js","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/scope-shared.js","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/scope-new.js","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/controller.js","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/service.js","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/filter.js","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/bootstrap.js","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/state.js","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/options.js","webpack:///C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/meteor-method.js"],"names":[],"mappings":"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","file":"dist/angular2-now.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular2now\"] = factory();\n\telse\n\t\troot[\"angular2now\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 08d45fabccece57849d9\n **/","import { common } from './common';\r\nimport { SetModule } from './api/set-module';\r\nimport { Component } from './api/component';\r\nimport { ScopeShared } from './api/scope-shared';\r\nimport { ScopeNew } from './api/scope-new';\r\nimport { View } from './api/view';\r\nimport { Inject } from './api/inject';\r\nimport { Controller } from './api/controller';\r\nimport { Service } from './api/service';\r\nimport { Filter } from './api/filter';\r\nimport { bootstrap } from './api/bootstrap';\r\nimport { State } from './api/state';\r\nimport { options, Options } from './api/options';\r\nimport { MeteorMethod } from './api/meteor-method';\r\n\r\nconst angular2now = {\r\n    SetModule: SetModule,\r\n\r\n    Component:   Component,\r\n    Directive:   Component,\r\n    ScopeShared: ScopeShared,\r\n    ScopeNew:    ScopeNew,\r\n    View:        View,\r\n    Inject:      Inject,\r\n    Controller:  Controller,\r\n    Service:     Service,\r\n    Filter:      Filter,\r\n    Injectable:  Service,\r\n    bootstrap:   bootstrap,\r\n    State:       State,\r\n\r\n    options: options,\r\n    Options: Options,\r\n\r\n    MeteorMethod: MeteorMethod\r\n};\r\n\r\nfunction init() {\r\n    common.isCordova = typeof cordova !== 'undefined';\r\n\r\n    common.angularModule = angular.module;\r\n\r\n    // Monkey patch angular.module\r\n    //angular.module = SetModule;\r\n}\r\n\r\nif (typeof System !== 'undefined' && System.register) {\r\n\r\n    System.register(\"angular2now\", [], function (_export) {\r\n\r\n        for (let i in angular2now)\r\n            _export(i, angular2now[i]);\r\n\r\n        return {\r\n            setters: [],\r\n            execute: function () {\r\n                init();\r\n            }\r\n        };\r\n\r\n    })\r\n} else {\r\n    init();\r\n}\r\n\r\nexport default angular2now;\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/angular2-now.js\n **/","export const common = {\n  angularModule: undefined,\n  currentModule: undefined,\n  currentNameSpace: undefined,\n  isCordova: false,\n  ng2nOptions: {\n    currentModule: function () {\n        return common.currentModule;\n    }\n  },\n  controllerAs: undefined,\n  $q: angular.injector(['ng']).get('$q')\n};\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/common.js\n **/","import { common } from './../common';\r\n\r\nexport function SetModule () {\r\n    /**\r\n     * Name-spacing applies to provider names, not modules. Each module\r\n     * has to have a unique name of it's own.\r\n     *\r\n     * A namespace may be specified like this:\r\n     *     SetModule('ftdesiree:helpers')\r\n     * The namespace, once set, will remain in force until removed.\r\n     * Remove the namespace like this:\r\n     *     angular.module(':helpers')\r\n     **/\r\n    common.currentModule = arguments[0].split(':');\r\n\r\n    if (common.currentModule.length === 1) {\r\n        // No namespace, just the module name\r\n        common.currentModule = common.currentModule[0];\r\n    } else {\r\n        // Split off the name-space and module name\r\n        common.currentNameSpace = common.currentModule[0];\r\n        common.currentModule = common.currentModule[1];\r\n\r\n        // Reassign arguments[0] without the namespace\r\n        arguments[0] = common.currentModule;\r\n    }\r\n\r\n    return common.angularModule.apply(angular, arguments);\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/set-module.js\n **/","import { View } from './view';\r\nimport { Inject } from './inject';\r\nimport { common } from './../common';\r\nimport { camelCase, unCamelCase } from './../utils';\r\n\r\n//function Directive(options) {\r\n//\r\n//    // A string passed is assumed to be the attribute name of the directive.\r\n//    if (typeof options === 'string')\r\n//        options = { selector: options };\r\n//\r\n//    // Directives have shared scope by default (scope:undefined).\r\n//    // Optionally they can have a new scope created (scope: true).\r\n//    // If you require an isolate scope for your directive then\r\n//    // pass \"scope: { ... }\" in options.\r\n//    if (options && !options.hasOwnProperty('scope'))\r\n//        angular.merge(options, { scope: undefined });\r\n//\r\n//    return Component(options);\r\n//}\r\n\r\nexport function Component(options) {\r\n    options = options || {};\r\n    // Allow shorthand notation of just passing the selector name as a string\r\n    if (typeof options === 'string')\r\n        options = { selector: options };\r\n\r\n    return function (target) {\r\n\r\n        // service injections, which could also have been specified by using @Inject\r\n        if (options.injectables && options.injectables instanceof Array)\r\n            target = Inject(options.injectables)(target);\r\n        // injectables has been renamed to services\r\n        if (options.services && options.services instanceof Array)\r\n            target = Inject(options.services)(target);\r\n\r\n        // Selector name may be prefixed with a '.', in which case \"restrict: 'C'\" will be used\r\n        options.selector = camelCase(options.selector || '') + '';\r\n        if (options.selector[0] === '.') {\r\n            var isClass = true;\r\n            options.selector = options.selector.slice(1);\r\n        }\r\n\r\n        // Save the unCamelCased selector name, so that bootstrap() can use it\r\n        target.selector = unCamelCase(options.selector);\r\n\r\n        // template options can be set with Component or with View\r\n        // so, we run View on the passed in options first.\r\n        if (options.template || options.templateUrl || options.transclude || options.directives)\r\n            View(options)(target);\r\n\r\n        // The template(Url) can also be passed in from the @View decorator\r\n        options.template = target.template || undefined;\r\n        options.templateUrl = target.templateUrl || undefined;\r\n\r\n        // Build the require array.\r\n        // Our controller needs the same injections as the component's controller,\r\n        // but with the \"@*\" injections renamed to \"$scope\". The link function will pass\r\n        // the \"@*\" injections directly to the component controller.\r\n        var requiredControllers = [options.selector];\r\n        target.$inject = target.$inject || [];\r\n        target.$inject = target.$inject.map(function(dep) {\r\n            if ( /^@[^]{0,2}/.test(dep[0]) ) {\r\n                requiredControllers.push('?' + dep.slice(1));\r\n                dep = 'delete-me'\r\n            }\r\n            return dep;\r\n        });\r\n\r\n        // Remove all the 'delete-me' entries\r\n        target.$inject = target.$inject.filter(function(v) { return v !== 'delete-me'; });\r\n\r\n        // Remember the original $inject, as it will be needed in the link function.\r\n        // In the link function we will receive any requested component controllers\r\n        // which we will then inject into the arguments that we will pass to the\r\n        // actual constructor of our component.\r\n        target.$injectDefer = target.$inject || [];\r\n\r\n        // Create the angular directive\r\n        var ddo = {\r\n            restrict:         options.restrict || ((options.template + options.templateUrl) ? 'EA' : isClass ? 'C' : 'A'),\r\n            controllerAs:     options.controllerAs || common.controllerAs || target.controllerAs || options.selector,\r\n            scope:            target.hasOwnProperty('scope') ? target.scope : options.hasOwnProperty('scope') ? options.scope : options['bind'] || {},\r\n            bindToController: typeof target.bindToController === 'boolean' ? target.bindToController : true,\r\n            template:         options.template,\r\n            templateUrl:      options.templateUrl,\r\n            controller:       target,\r\n            replace:          options.replace || false,\r\n            transclude:       /ng-transclude/i.test(options.template) || target.transclude,\r\n            require:          options.require || target.require || requiredControllers,\r\n            link:             options.link || target.link || link\r\n        };\r\n\r\n        try {\r\n            angular.module(common.currentModule)\r\n                .directive(options.selector, function () {\r\n                    return ddo;\r\n                });\r\n        } catch (er) {\r\n            throw new Error('Does module \"' + common.currentModule + '\" exist? You may need to use angular.module(\"youModuleName\").');\r\n        }\r\n\r\n        return target;\r\n\r\n        function link(scope, el, attr, controllers) {\r\n            // Create a service with the same name as the selector\r\n            // That holds a reference to our component\r\n            //angular.module(currentModule).value(camelCase(target.selector), controllers[0]);\r\n\r\n            // Alternate syntax for the injection of other component's controllers\r\n            if (controllers[0].$dependson) {\r\n                controllers[0].$dependson.apply(controllers[0], controllers.slice(1));\r\n            }\r\n        }\r\n    };\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/component.js\n **/","export function View(options) {\r\n    options = options || {};\r\n    // Allow shorthand notation of just passing the templateUrl as a string\r\n    if (typeof options === 'string')\r\n        options = { templateUrl: options };\r\n\r\n    //if (!options.template) options.template = undefined;\r\n\r\n    return function (target) {\r\n        target.template = options.template || target.template;\r\n        target.templateUrl = options.templateUrl || target.templateUrl;\r\n\r\n        // When a templateUrl is specified in options, then transclude can also be specified\r\n        target.transclude = options.transclude || target.transclude;\r\n\r\n        // directives is an array of child directive controllers (Classes)\r\n        target.directives = options.directives || target.directives;\r\n\r\n        // Check for the new <content> tag and add ng-transclude to it, if not there.\r\n        if (target.template)\r\n            target.template = transcludeContent(target.template);\r\n\r\n        return target;\r\n    };\r\n\r\n    // If template contains the new <content> tag then add ng-transclude to it.\r\n    // This will be picked up in @Component, where ddo.transclude will be set to true.\r\n    function transcludeContent(template) {\r\n        var s = (template || '').match(/\\<content[ >]([^\\>]+)/i);\r\n        if (s) {\r\n            if (s[1].toLowerCase().indexOf('ng-transclude') === -1)\r\n                template = template.replace(/\\<content/i, '<content ng-transclude');\r\n        }\r\n        return template;\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/view.js\n **/","import { nameSpace } from './../utils';\r\n\r\n// 2015-09-01 Replaced the whole Inject function with a new more flexible version.\r\n// Thanks to Steven Weingärtner for his code, which works with both Classes and Methods,\r\n// as well as preserving injectables from a parent class (when extending a parent class).\r\n// New features:\r\n// - Dependencies can be passed in as arguments, not requiring the array wrapper. The\r\n//   original syntax with the array wrapper is still supported.\r\n// - Methods of a class can now be Injected also\r\n// - Child classes will inherit the parent class's injectables, which will be appended\r\n//   to the end of the child's dependencies\r\nexport function Inject() {\r\n    var deps;\r\n    if (arguments[0] instanceof Array)\r\n        deps = arguments[0];\r\n    else\r\n        deps = Array.prototype.slice.call(arguments);\r\n\r\n    if (deps.length === 0) {\r\n        throw new Error('@Inject: No dependencies passed in');\r\n    }\r\n\r\n    return function (target, name, descriptor) {\r\n        var injectable = target;\r\n        if (descriptor)\r\n            injectable = descriptor.value;\r\n\r\n        if (!injectable)\r\n            throw new TypeError('@Inject can only be used with classes or class methods.')\r\n\r\n         var existingInjects = injectable.$inject;\r\n\r\n        injectable.$inject = [];\r\n\r\n        angular.forEach(deps, function (dep) {\r\n            // Namespace any injectables without an existing nameSpace prefix and also\r\n            // not already prefixed with '$', '@' or '@^'.\r\n            if (dep[0] !== '$' && dep[0] !== '@' && dep.indexOf('_') === -1)\r\n                dep = nameSpace(dep);\r\n\r\n            if (injectable.$inject.indexOf(dep) === -1) {\r\n                injectable.$inject.push(dep);\r\n            }\r\n        });\r\n\r\n        if (existingInjects) {\r\n            injectable.$inject = injectable.$inject.concat(existingInjects);\r\n        }\r\n\r\n        return descriptor || target;\r\n    };\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/inject.js\n **/","import { common } from './common';\r\n\r\n// Create a new name from the concatenation of\r\n// the currentNameSpace and the name argument\r\nexport function nameSpace(name) {\r\n    var nsName = name;\r\n\r\n    if (common.currentNameSpace) {\r\n        //nsName = camelCase(currentModule) + '.' + name;\r\n        nsName = common.currentNameSpace + '_' + name;\r\n    }\r\n\r\n    return nsName;\r\n}\r\n\r\n// Does a provider with a specific name exist in the current module\r\nexport function serviceExists(serviceName) {\r\n    return !!getService(serviceName);\r\n}\r\n\r\nexport function getService(serviceName, moduleName) {\r\n    if (!moduleName)\r\n        moduleName = common.currentModule;\r\n\r\n    return angular.module(moduleName)\r\n        ._invokeQueue\r\n        .filter(function (v, i) {\r\n            return v[0] === '$provide' && v[2][0] === serviceName\r\n        })[0];\r\n}\r\n\r\nexport function camelCase(s) {\r\n    return s.replace(/-(.)/g, function (a, b) {\r\n        return b.toUpperCase();\r\n    });\r\n}\r\n\r\nexport function unCamelCase(c) {\r\n    var s = c.replace(/([A-Z])/g, '-$1')\r\n             .replace(/--/g, '-')\r\n             .toLowerCase();\r\n    if (s[0] === '-') s = s.slice(1);\r\n    return s;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/utils.js\n **/","// Cancels out the automatic creation of isolate scope for the directive,\r\n// because Angular 1.x allows only one isolate scope directive per element.\r\n// This is useful when actually creating directives, which add behaviour\r\n// to an existing element, as opposed to components which are stand alone\r\n// bits of html and behaviour.\r\n// The other way to do this is to pass \"scope: undefined\" to @Component.\r\nexport function ScopeShared (target) {\r\n    target.scope = undefined;\r\n    return target\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/scope-shared.js\n **/","// Requests a new scope to be created when the directive is created.\r\n// The other way to do this is to pass \"scope: true\" to @Component.\r\nexport function ScopeNew (target) {\r\n    target.scope = true;\r\n    return target\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/scope-new.js\n **/","import { common } from './../common';\r\nimport { nameSpace } from './../utils';\r\n\r\nexport function Controller(options) {\r\n    options = options || {};\r\n    // Allow shorthand notation of just passing the name as a string\r\n    if (typeof options === 'string')\r\n        options = { name: options };\r\n\r\n    return function (target) {\r\n        angular.module(common.currentModule)\r\n            .controller(nameSpace(options.name), target);\r\n\r\n        return target;\r\n    };\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/controller.js\n **/","import { common } from './../common';\r\nimport { nameSpace } from './../utils';\r\nexport function Service(options) {\r\n    options = options || {};\r\n    // Allow shorthand notation of just passing the name as a string\r\n    if (typeof options === 'string')\r\n        options = { name: options };\r\n\r\n    return function (target) {\r\n        angular.module(common.currentModule)\r\n            .service(nameSpace(options.name), target);\r\n        //.factory(options.name, function () { return new target })\r\n\r\n        return target;\r\n    };\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/service.js\n **/","import { common } from './../common';\r\nimport { nameSpace } from './../utils';\r\n\r\nexport function Filter(options) {\r\n    options = options || {};\r\n    // Allow shorthand notation of just passing the name as a string\r\n    if (typeof options === 'string')\r\n        options = { name: options };\r\n\r\n    return function (target) {\r\n\r\n        filterFunc.$inject = target.$inject;\r\n\r\n        angular.module(common.currentModule)\r\n            .filter(nameSpace(options.name), filterFunc);\r\n\r\n        function filterFunc() {\r\n            var args = Array.prototype.slice.call(arguments);\r\n            var f = new (Function.prototype.bind.apply(target, [null].concat(args)));\r\n            return f;\r\n        }\r\n\r\n        return target;\r\n    };\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/filter.js\n **/","import { common } from './../common';\n\n/**\n * Bootstraps the Angular 1.x app.\n *\n * @param ?target   undefined | string | class\n *      undefined:  bootstraps on document and the current angular module\n *      string:     will use document.querySelector to find the element by this string\n *      class:      bootstraps on the component defined on this class, looks for selector\n *\n * @param ?config   angular.bootstrap() config object, see AngularJS doco\n */\nexport function bootstrap(target, config) {\n  if (!target || (target && !target.selector && typeof target === 'function')) {\n    target = {\n      selector: common.currentModule\n    };\n    var bootOnDocument = true;\n  }\n\n  // Allow string shortcut for target.selector. Can be the name of any HTML tag.\n  if (typeof target === 'string') {\n    target = {\n      selector: target\n    };\n  }\n\n  // Mark this class as a bootstrap component. This allows @State\n  // to handle it correctly.\n  target.bootstrap = true;\n\n  var bootModule = target.selector || common.currentModule;\n\n  if (bootModule !== common.currentModule)\n    angular.module(bootModule);\n\n  if (!config)\n    config = {\n      strictDi: false\n    };\n\n  if (!Meteor) var Meteor = {};\n  if (common.isCordova)\n    angular.element(document).on(\"deviceready\", onReady);\n  else\n    angular.element(document).ready(onReady);\n\n  function onReady() {\n    // Find the component's element\n    if (!bootOnDocument)\n      var el = document.querySelector(target.selector);\n    // Or use document, if user passed no arguments\n    else\n      var el = document.body;\n\n    angular.bootstrap(el, [bootModule], config);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/bootstrap.js\n **/","import {\n  common\n}\nfrom './../common';\nimport {\n  serviceExists, nameSpace, camelCase\n}\nfrom './../utils';\n\n/**\n * State can be used to annotate either a Component or a class and assign\n * a ui-router state to it.\n *\n * @param options   literal object\n *      name:              name of the state\n *      url:               url associated with this state\n *      template:          template\n *      templateUrl:       templateUrl\n *      templateProvider:  templateProvider\n *      defaultRoute:      truthy = .otherwise(url)\n *                         string = .otherwise(defaultRoute)\n *      resolve:           Literal object, see ui-router resolve\n *      abstract:          true/false\n *      params:            Literal object, see ui-router doco\n *      parent:            Define a custom parent state\n *      controller:        A controller is automatically assigned, but if you need\n *                         finer control then you can assign your own controller\n *      controllerAs:      Specify ControllerAs for cases when there is no\n *                         @Component used\n *\n * If a class is annotated then it is assumed to be the controller and\n * the state name will be used as the name of the injectable service\n * that will hold any resolves requested.\n *\n * When a component is annotated and resolves requested, then the component's\n * selector name is used as the name of the injectable service that holds\n * their values.\n */\nexport function State(options) {\n\n  if (!options || !(options instanceof Object) || options.name === undefined)\n    throw new Error('@State: Valid options are: name, url, defaultRoute, template, templateUrl, templateProvider, resolve, abstract, parent, data.');\n\n  return function(target) {\n\n    var deps;\n    var resolvedServiceName = nameSpace(camelCase(target.selector || (options.name + '').replace('.', '-')));\n\n    // Indicates if there is anything to resolve\n    var doResolve;\n\n    // Values to resolve can either be supplied in options.resolve or as a static method on the\n    // component's class\n    var resolves = options.resolve || target.resolve;\n\n    // Is there a resolve block?\n    if (resolves && resolves instanceof Object && (deps = Object.keys(resolves)).length)\n      doResolve = true;\n\n    // Create an injectable value service to share the resolved values with the controller\n    // The service bears the same name as the component's camelCased selector name.\n    if (doResolve) {\n      if (!serviceExists(resolvedServiceName)) {\n        angular.module(common.currentModule).value(resolvedServiceName, {});\n      }\n    }\n\n    // Configure the state\n    angular.module(common.currentModule)\n      .config(['$urlRouterProvider', '$stateProvider', '$locationProvider',\n        function($urlRouterProvider, $stateProvider, $locationProvider) {\n\n          // Activate this state, if options.defaultRoute = true.\n          // If you don't want this then don't set options.defaultRoute to true\n          // and, instead, use $state.go inside the constructor to active a state.\n          // You can also pass a string to defaultRoute, which will become the default route.\n          if (options.defaultRoute)\n            $urlRouterProvider.otherwise((typeof options.defaultRoute === 'string') ? options.defaultRoute : options.url);\n\n          // Optionally configure html5Mode\n          if (!(typeof options.html5Mode === 'undefined'))\n            $locationProvider.html5Mode(options.html5Mode);\n\n          // The user can supply a controller through a parameter in options\n          // or the class itself can be used as the controller if no component is annotated.\n          var userController = options.controller || (!target.selector ? target : undefined);\n\n          // Also, de-namespace the resolve injectables for ui-router to inject correctly\n          if (userController && userController.$inject && userController.$inject.length && deps && deps.length) {\n            deps.forEach(function(dep) {\n              var i = userController.$inject.indexOf(common.currentNameSpace + '_' + dep);\n              if (i !== -1)\n                userController.$inject[i] = dep;\n            });\n          }\n\n\n          // This is the state definition object\n          var sdo = {\n            url: options.url,\n\n            // Default values for URL parameters can be configured here.\n            // ALso, parameters that do not appear in the URL can be configured here.\n            params: options.params,\n\n            // The State applied to a bootstrap component can be abstract,\n            // if you don't want that state to be able to activate.\n            abstract: options.abstract,\n\n            templateUrl: options.templateUrl,\n\n            // This is the \"inline\" template, as opposed to the templateUrl.\n            // 1) If either options.templateUrl or options.templateProvider is specified then\n            //      template will be set to undefined.\n            // 2) If options.template is provided then it will be used.\n            // 3) Otherwise, if this is a component, but not the bootstrap(**) component,\n            //    then we use it's selector to create the inline template \"<selector></selector>\".\n            // 4) Otherwise, we provide the following default template \"<div ui-view></div>\".\n            //(**) The bootstrap component will be rendered by Angular directly and must not\n            //     be rendered again by ui-router, or you will literally see it twice.\n            // todo: allow the user to specify their own div/span instead of forcing \"div(ui-view)\"\n            template: options.templateUrl || options.templateProvider ? undefined : options.template || ((target.template || target.templateUrl) && !target.bootstrap && target.selector ? target.selector.replace(/^(.*)$/, '<$1></$1>') : '<div ui-view=\"\"></div>'),\n\n            // The option for dynamically setting a template based on local values\n            //  or injectable services\n            templateProvider: options.templateProvider,\n\n            // Do we need to resolve stuff? If so, then we also provide a controller to catch the resolved data.\n            resolve: resolves,\n\n            // A user supplied controller OR\n            // An internally created proxy controller, if resolves were requested for a Component.\n            controller: userController || (doResolve ? controller : undefined),\n\n            // Optionally controllerAs can be specifically set for those situations,\n            // when we use @State on a class and there is no @Component defined.\n            controllerAs: target.controllerAs || options.controllerAs || (common.ng2nOptions.hasOwnProperty('controllerAs') && !target.hasOwnProperty('selector') ? common.ng2nOptions.controllerAs : undefined),\n\n            // onEnter and onExit events\n            onEnter: options.onEnter,\n            onExit: options.onExit,\n\n            // Custom parent State\n            parent: options.parent,\n\n            // Custom data\n            data: options.data\n          };\n\n\n          // Create the state\n          $stateProvider.state(options.name, sdo);\n\n          // When our automatic controller is used, we inject the resolved values into it,\n          // along with the injectable service that will be used to publish them.\n          // If the user supplied a controller than we do not inject anything\n          if (doResolve) {\n            deps.unshift(resolvedServiceName);\n\n            controller.$inject = deps;\n          }\n\n          // Populate the published service with the resolved values\n          function controller() {\n            var args = Array.prototype.slice.call(arguments);\n\n            // This is the service that we \"unshifted\" earlier\n            var localScope = args[0];\n\n            args = args.slice(1);\n\n            // Now we copy the resolved values to the service.\n            // This service can be injected into a component's constructor, for example.\n            deps.slice(1).forEach(function(v, i) {\n              localScope[v] = args[i];\n            });\n\n          }\n\n        }\n      ]);\n\n    return target;\n  };\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/state.js\n **/","import { common } from './../common';\r\nimport { SetModule } from './set-module';\r\n\r\n// Allow configuration of some angular2-now default settings\r\n// controllerAs: if provided, will user this string instead of component name, for example \"vm\"\r\nexport function options(options) {\r\n    if (!options) return common.ng2nOptions;\r\n\r\n    if (typeof options.controllerAs !== 'undefined') {\r\n        common.controllerAs = options.controllerAs;\r\n    }\r\n\r\n    // Optional spinner object can be registered. It must expose show() and hide() methods.\r\n    // The spinner will be activated before any I/O operations and deactivated once they complete.\r\n    common.ng2nOptions.spinner = options.spinner || {show: angular.noop, hide: angular.noop};\r\n\r\n    // events expose beforeCall() and afterCall().\r\n    // beforeCall() will be called before any I/O operations.\r\n    // afterCall() will be called after any I/O operations have completed.\r\n    common.ng2nOptions.events = options.events || {beforeCall: angular.noop, afterCall: angular.noop};\r\n\r\n    // The noConflict option allows us to control whether or not angular2-now\r\n    // monkey-patches angular.module.\r\n    //  true = don't monkey patch.\r\n    //  false = (default for versions < 0.4.0)  DO monkey patch angular.module\r\n    //          for backwards compatibility\r\n    if (typeof options.noConflict !== 'undefined') {\r\n        if (options.noConflict)\r\n            angular.module = common.angularModule;\r\n        else\r\n            angular.module = SetModule;\r\n    }\r\n}\r\n\r\nexport function Options(options) {\r\n    return function(target) {\r\n        angular.merge(common.ng2nOptions, options);\r\n        return target;\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/options.js\n **/","import { common } from './../common';\r\n\r\n\r\n// The name of the Meteor.method is the same as the name of class method.\r\nexport function MeteorMethod(_options) {\r\n    var options = angular.merge({}, common.ng2nOptions, _options);\r\n    var spinner = options.spinner || {show: angular.noop, hide: angular.noop};\r\n    var events = options.events || {beforeCall: angular.noop, afterCall: angular.noop};\r\n\r\n    return function (target, name, descriptor) {\r\n\r\n        // Create a method that calls the back-end\r\n        descriptor.value = function () {\r\n            var argv = Array.prototype.slice.call(arguments);\r\n            var deferred = common.$q.defer();\r\n\r\n            if (typeof spinner === 'string') {\r\n                if (angular.injector(['ng', common.currentModule]).has(options.spinner)) {\r\n                    spinner = angular.injector(['ng', common.currentModule]).get(options.spinner);\r\n                    options.spinner = spinner;\r\n                } else\r\n                    throw new Error('Spinner \"' + spinner + '\" does not exist.');\r\n            }\r\n\r\n            argv.unshift(name);\r\n            argv.push(resolver);\r\n\r\n            if (spinner) spinner.show();\r\n            if(events.beforeCall) {\r\n              events.beforeCall();\r\n            }\r\n            // Call optional events.beforeCall()\r\n\r\n            // todo: should call Meteor after resolution of promise returned by beforeCall()\r\n            Meteor.call.apply(this, argv);\r\n\r\n            deferred.promise.finally(function() {\r\n                spinner.hide();\r\n                // TODO @pbastowski, is it correct?\r\n                // was: options.events.afterCall();  // Call optional events.afterCall()\r\n                if(events.afterCall) {\r\n                  events.afterCall();\r\n                }\r\n\r\n            });\r\n\r\n            return deferred.promise;\r\n\r\n            function resolver(err, data) {\r\n                if (err)\r\n                    deferred.reject(err);\r\n                else\r\n                    deferred.resolve(data);\r\n            }\r\n        };\r\n\r\n        return descriptor;\r\n    }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/mYsPC/Dropbox/Repozytoria/Forki/angular2-now/src/api/meteor-method.js\n **/"],"sourceRoot":""}